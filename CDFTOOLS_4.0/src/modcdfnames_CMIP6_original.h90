  CHARACTER(LEN=256) :: cn_output = 'CMIP6'  

  ! Dimension name : cn_. [ 1 letter only ]
  CHARACTER(LEN=256) :: cn_x='x'               !: longitude, I dimension
  CHARACTER(LEN=256) :: cn_y='y'               !: latitude,  J dimension
  CHARACTER(LEN=256) :: cn_z='depth'           !: depth, z dimension
  CHARACTER(LEN=256) :: cn_t='time_counter'    !: time dimension

  ! Dimension variable
  CHARACTER(LEN=256) :: cn_vlon2d  = 'nav_lon'      !: longitude
  CHARACTER(LEN=256) :: cn_vlat2d  = 'nav_lat'      !: latitude
  CHARACTER(LEN=256) :: cn_vdeptht = 'deptht'       !: depth
  CHARACTER(LEN=256) :: cn_vdepthu = 'depthu'       !: depth
  CHARACTER(LEN=256) :: cn_vdepthv = 'depthv'       !: depth
  CHARACTER(LEN=256) :: cn_vdepthw = 'depthw'       !: depth
  CHARACTER(LEN=256) :: cn_vtimec  = 'time_centered'!: time 
  CHARACTER(LEN=256) :: cn_vlon1d  = 'lon'          !: longitude 1d
  CHARACTER(LEN=256) :: cn_vlat1d  = 'lat'          !: latitude  1d

  ! Attribute of a variable
  CHARACTER(LEN=256) :: cn_missing_value = '_FillValue' !: missing value (to be replaced bby _Fill_Value)

  ! Metrics
  CHARACTER(LEN=256) :: cn_ve1t='e1t', cn_ve2t='e2t'   !: e.t
  CHARACTER(LEN=256) :: cn_ve1u='e1u', cn_ve2u='e2u'   !: e.u
  CHARACTER(LEN=256) :: cn_ve1v='e1v', cn_ve2v='e2v'   !: e.v
  CHARACTER(LEN=256) :: cn_ve1f='e1f', cn_ve2f='e2f'   !: e.v
  CHARACTER(LEN=256) :: cn_ve3t1d='e3t_0'              !: e3. (1D). 
  CHARACTER(LEN=256) :: cn_ve3w1d='e3w_0'              !: e3. (1D). 
  CHARACTER(LEN=256) :: cn_ve3t='e3t_0', cn_ve3w='e3w_0'   !: e3. ( 3D). 
  CHARACTER(LEN=256) :: cn_ve3u='e3u_0', cn_ve3v='e3v_0'   !: e3.
  ! VVL case [ In CPMIP so far, only one name is used. ]
  CHARACTER(LEN=256) :: cn_ve3tvvl='thkcello', cn_ve3wvvl='thkcello'   !: e3. (3D). 
  CHARACTER(LEN=256) :: cn_ve3uvvl='thkcello', cn_ve3vvvl='thkcello'   !: e3.

  CHARACTER(LEN=256) :: cn_vff='ff'

  CHARACTER(LEN=256) :: cn_gdept='gdept', cn_gdepw='gdepw'   !: 1d dep variable
  CHARACTER(LEN=256) :: cn_hdept='hdept', cn_hdepw='hdepw'   !: 2d dep variable

  CHARACTER(LEN=256) :: cn_depu3d='depu3d', cn_depw3d='depw3d' !: Local depth U and W in broken line extraction

  CHARACTER(LEN=256) :: cn_glamt='glamt', cn_gphit='gphit'   !:  glam gphi
  CHARACTER(LEN=256) :: cn_glamu='glamu', cn_gphiu='gphiu'   !:  glam gphi
  CHARACTER(LEN=256) :: cn_glamv='glamv', cn_gphiv='gphiv'   !:  glam gphi
  CHARACTER(LEN=256) :: cn_glamf='glamf', cn_gphif='gphif'   !:  glam gphi

  ! Mask variables
  CHARACTER(LEN=256) :: cn_tmask='tmask', cn_umask='umask'   !:  tmask, umask
  CHARACTER(LEN=256) :: cn_vmask='vmask', cn_fmask='fmask'   !:  vmask, fmask
  CHARACTER(LEN=256) :: cn_tmaskutil='tmaskutil'             !:  tmaskutil
  CHARACTER(LEN=256) :: cn_polymask='polymask'               !:  polymask
  CHARACTER(LEN=256) :: cn_tmaskatl='atlmsk'               !:  atlantic mask in cn_fbasins
  CHARACTER(LEN=256) :: cn_tmaskpac='indmsk'               !:  pacific mask in cn_fbasins
  CHARACTER(LEN=256) :: cn_tmaskind='pacmsk'               !:  indian mask in cn_fbasins
  CHARACTER(LEN=256) :: cn_tmaskant='socmsk'               !:  austral mask in cn_fbasins
  CHARACTER(LEN=256) :: cn_tmaskmed='tmaskmed'               !:  mediterranean mask in cn_fbasins
 

  ! Generic mesh-mask file names  cn_f...
  CHARACTER(LEN=256) :: cn_fzgr='mesh.nc'
  CHARACTER(LEN=256) :: cn_fe3t='mesh.nc'
  CHARACTER(LEN=256) :: cn_fe3u='mesh.nc'
  CHARACTER(LEN=256) :: cn_fe3v='mesh.nc'
  CHARACTER(LEN=256) :: cn_fe3w='mesh.nc'
  CHARACTER(LEN=256) :: cn_fhgr='mesh.nc'
  CHARACTER(LEN=256) :: cn_fmsk='mask.nc'
  CHARACTER(LEN=256) :: cn_fcoo='coordinates.nc'
  CHARACTER(LEN=256) :: cn_fbasins='subbasin.nc'

  ! Variable name  : cn_v... [ starts with cn_v ]
  CHARACTER(LEN=256) :: cn_votemper='thetao'   !: temperature
  CHARACTER(LEN=256) :: cn_vosaline='so'       !: salinity
  CHARACTER(LEN=256) :: cn_votemper2='thetao_sqd' !: squared temperature
  CHARACTER(LEN=256) :: cn_vosaline2='so_sqd'  !: squared salinity
  CHARACTER(LEN=256) :: cn_vozocrtx='uo'       !: zonal velocity
  CHARACTER(LEN=256) :: cn_vomecrty='vo'       !: meridional velocity
  CHARACTER(LEN=256) :: cn_vozocrtx2='u2o'     !: squared velocity
  CHARACTER(LEN=256) :: cn_vomecrty2='v2o'     !: squared velocity
  CHARACTER(LEN=256) :: cn_vomeeivv='vomeeivv' !: meridional Eddy Induced Velocity ! NOT A CMIP6 VARIABLE (only eiv transport asked)
  CHARACTER(LEN=256) :: cn_vovecrtz='wo'       !: vertical velocity
  CHARACTER(LEN=256) :: cn_vovecrtz2='w2o'     !: squared vertical velocity
  CHARACTER(LEN=256) :: cn_sossheig='zos'      !: Dynamic Sea Surface Height
  CHARACTER(LEN=256) :: cn_sossheig2='zossq'   !: Squared Dynamic Sea Surface Height
  CHARACTER(LEN=256) :: cn_somxldep='mlotst'   !: Mixed layer depth (density criterium 0.03kg m-3, Eq H43 Griffies et al., 2016)
  CHARACTER(LEN=256) :: cn_somxl010='somxl010' !: Mixed layer depth (density criterium)      
  CHARACTER(LEN=256) :: cn_somxlt02='somxlt02' !: Mixed layer depth (temperature criterium)
  CHARACTER(LEN=256) :: cn_sozotaux='tauuo'    !: Zonal wind stress

  CHARACTER(LEN=256) :: cn_sohefldo='hfds'     !: Total Heat FLux
  CHARACTER(LEN=256) :: cn_solhflup='solhflup' !: Latent Heat FLux 
  CHARACTER(LEN=256) :: cn_sosbhfup='sosbhfup' !: Sensible heat Flux
  CHARACTER(LEN=256) :: cn_solwfldo='solwfldo' !: Long Wave downward Heat Flux
  CHARACTER(LEN=256) :: cn_soshfldo='soshfldo' !: Solar Heat FLux

  CHARACTER(LEN=256) :: cn_sowaflup='sowaflup' !: Fresh Water Flux
  CHARACTER(LEN=256) :: cn_sowaflcd='sowaflcd' !: Concentration Dilution water flux
  CHARACTER(LEN=256) :: cn_sowafldp='sowafldp' !: SSS damping water Flux
  CHARACTER(LEN=256) :: cn_sorunoff='sorunoff' !: River Run-off
  CHARACTER(LEN=256) :: cn_iowaflup='iowaflup' !: Ice Ocean Water flux ( + = freezing, - = melting)
  CHARACTER(LEN=256) :: cn_soicecov='soicecov' !: Ice cover

  CHARACTER(LEN=256) :: cn_iicbmass='berg_mass'!: Mass of Icebergs (kg/m2)
  CHARACTER(LEN=256) :: cn_iicbmelt='berg_melt'!: Melting rate of icebergs (kg/m2/s)

  ! MOC variables
  CHARACTER(LEN=256) :: cn_zomsfatl='zomsfatl' !: moc in the Atlantic
  CHARACTER(LEN=256) :: cn_zomsfglo='zomsfglo' !: moc in the Global ocean
  CHARACTER(LEN=256) :: cn_zomsfpac='zomsfpac' !: moc in the Pacific
  CHARACTER(LEN=256) :: cn_zomsfinp='zomsfinp' !: moc in the Indo-Pacific
  CHARACTER(LEN=256) :: cn_zomsfind='zomsfind' !: moc in the Indian ocean
  CHARACTER(LEN=256) :: cn_zomsfinp0='zomsfinp0' !: moc in the Indo-Pacific Net
  !
  CHARACTER(LEN=256) :: cn_zoisoatl='zoisoatl' !: moc in the Atlantic
  CHARACTER(LEN=256) :: cn_zoisoglo='zoisoglo' !: moc in the Global ocean
  CHARACTER(LEN=256) :: cn_zoisopac='zoisopac' !: moc in the Pacific
  CHARACTER(LEN=256) :: cn_zoisoinp='zoisoinp' !: moc in the Indo-Pacific
  CHARACTER(LEN=256) :: cn_zoisoind='zoisoind' !: moc in the Indian ocean
  CHARACTER(LEN=256) :: cn_zoisoinp0='zoisoinp0' !: moc in the Indo-Pacific Net
  
  ! transport variables
  CHARACTER(LEN=256) :: cn_vozout='uto'        !: product U x T at U point
  CHARACTER(LEN=256) :: cn_vomevt='vto'        !: product V x T at V point
  CHARACTER(LEN=256) :: cn_vozous='uso'        !: product U x S at U point
  CHARACTER(LEN=256) :: cn_vomevs='vso'        !: product V x S at V point
  CHARACTER(LEN=256) :: cn_sozout='sozout'     !: product U x T at U point
  CHARACTER(LEN=256) :: cn_somevt='somevt'     !: product V x T at V point
  CHARACTER(LEN=256) :: cn_sozous='sozous'     !: product U x S at U point
  CHARACTER(LEN=256) :: cn_somevs='somevs'     !: product V x S at V point
  CHARACTER(LEN=256) :: cn_sozoutrp='umo_vint' !: vertically integrated trp at U point
  CHARACTER(LEN=256) :: cn_somevtrp='somevtrp' !: vertically integrated trp at V point ! NOT A CMIP6 VARIABLE
  CHARACTER(LEN=256) :: cn_vouv='vouv'         !: product U x V at T point

  ! density, isopycnal diagnostics
  CHARACTER(LEN=256) :: cn_vosigma0='vosigma0' !: potential density refered to surface
  CHARACTER(LEN=256) :: cn_vosigmai='vosigmai' !: potential density refered to a partiular depth
  CHARACTER(LEN=256) :: cn_vosigntr='vosigntr' !: neutral density
  CHARACTER(LEN=256) :: cn_vodepiso='vodepiso' !: depth of isopycnal
  CHARACTER(LEN=256) :: cn_isothick='isothick' !: isopycnal tickness (from cdfsigintegr)

  ! Passive tracer variable
  CHARACTER(LEN=256) :: cn_invcfc='INVCFC'     !: CFC inventory
  CHARACTER(LEN=256) :: cn_cfc11='CFC11'       !: CFC concentration
  CHARACTER(LEN=256) :: cn_pendep='pendep'     !: CFC penetration depth (from cdfpendep)
  
  ! ice variable names
  CHARACTER(LEN=256) :: cn_iicethic='iicethic' !: ice thickness
  CHARACTER(LEN=256) :: cn_ileadfra='ileadfra' !: ice concentration
  CHARACTER(LEN=256) :: cn_iicethic3='iicethic'!: ice thickness (LIM3)
  CHARACTER(LEN=256) :: cn_ileadfra3='iiceconc'!: ice concentration (LIM3)
  
  ! Bathymetry
  CHARACTER(LEN=256) :: cn_fbathymet='bathy_meter.nc' !: file Bathymetry in meters
  CHARACTER(LEN=256) :: cn_fbathylev='bathy_level.nc' !: file Bathymetry in levels

  CHARACTER(LEN=256) :: cn_bathymet='Bathymetry' !: variable Bathymetry in meters
  CHARACTER(LEN=256) :: cn_bathylev='bathy_level'!: variable Bathymetry in levels
  CHARACTER(LEN=256) :: cn_mbathy  ='mbathy'     !: variable mbathy in levels

  ! variables to be squared when performing cdfmoy
  INTEGER(KIND=4), PARAMETER :: jp_sqdvarmax=10
  INTEGER(KIND=4) :: nn_sqdvar = 4
  INTEGER(KIND=4), PRIVATE :: ji
  CHARACTER(LEN=15), DIMENSION(jp_sqdvarmax) :: cn_sqdvar = &
      & (/'uo','vo','wo','zos',('        ', ji=jp_sqdvarmax-5,jp_sqdvarmax) /)

  ! variables eligible for 3rd moment computation when performing cdfmoy
  INTEGER(KIND=4), PARAMETER :: jp_cubvarmax=10
  INTEGER(KIND=4) :: nn_cubvar = 2
  CHARACTER(LEN=15), DIMENSION(jp_cubvarmax) :: cn_cubvar = &
      & (/'zos','thetao',('        ', ji=3,jp_cubvarmax) /)

